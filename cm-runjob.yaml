apiVersion: v1
kind: ConfigMap
metadata:
  name: runjob
data:
  runjob.sh: |+
    set -e
    set -x

    echo "Running locally over: ${CMS_INPUT_FILES}"
    
    export CMS_INPUT_FILES="file:///tmp/inputs/$(basename $CMS_INPUT_FILES)"
    echo "Actual files ${CMS_INPUT_FILES}"
    time /opt/cms/entrypoint.sh cmsRun ${CMS_CONFIG} > /dev/null 2>&1
    
    mkdir -p /tmp/outputs
    CMS_OUTPUT_JSON_FILE="/tmp/outputs/$(basename ${CMS_INPUT_FILES})"
    /opt/cms/entrypoint.sh python /dump_json_pyroot.py ${CMS_OUTPUT_FILE} ${CMS_DATASET_NAME} ${CMS_OUTPUT_JSON_FILE}
    cat ${CMS_OUTPUT_JSON_FILE}
    echo ${CMS_LUMINOSITY_DATA}
    python /publish_single.py ${CMS_OUTPUT_JSON_FILE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: getfile
data:
  getfile.sh: |+
    set -e
    set -x

    cat >/root/.boto <<EOF
    [Credentials]
    gs_access_key_id = $GCS_ACCESS
    gs_secret_access_key=$GCS_SECRET

    [Boto]
    https_validate_certificates = True
    
    [GSUtil]
    content_language = en
    default_api_version = 2
    default_project_id = $GCS_PROJECT_ID
    parallel_process_count=1
    parallel_thread_count=1
    parallel_composite_upload_threshold=0
    sliced_object_download_threshold=0
    EOF

    chmod 644 /root/.boto

    trickle -d $DOWNLOAD_MAX_KB -u $UPLOAD_MAX_KB gsutil cp $(echo $CMS_INPUT_FILES | sed 's#gs/#gs://#') /tmp/inputs/$(basename $CMS_INPUT_FILES)
